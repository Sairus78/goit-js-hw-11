{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '46003151-fdbe84ecfff9a38ce8f04bf2a';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1, perPage = 12) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    page: page,\n    per_page: perPage,\n  };\n\n  try {\n    const response = await axios.get(BASE_URL, { params });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data from Pixabay:', error);\n    throw error;\n  }\n}\n","export function renderGallery(images) {\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n      <div class=\"photo-card\">\n        <a href=\"${largeImageURL}\" class=\"gallery-item\">\n          <span class=\"loader\"></span>\n          <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <div class=\"info-item\">\n            <b>Likes</b>\n            <span>${likes}</span>\n          </div>\n          <div class=\"info-item\">\n            <b>Views</b>\n            <span>${views}</span>\n          </div>\n          <div class=\"info-item\">\n            <b>Comments</b>\n            <span>${comments}</span>\n          </div>\n          <div class=\"info-item\">\n            <b>Downloads</b>\n            <span>${downloads}</span>\n          </div>\n        </div>\n      </div>`;\n      }\n    )\n    .join('');\n\n  const galleryElement = document.querySelector('.gallery');\n  galleryElement.insertAdjacentHTML('beforeend', markup);\n\n  // Після рендерингу галереї ініціалізуємо завантаження зображень\n  const imagesAll = document.querySelectorAll('.gallery-item img');\n  images.forEach(img => {\n    img.onload = () => {\n      const loader = img.previousElementSibling; // Лоадер перед зображенням\n      loader.classList.add('hidden'); // Ховаємо лоадер\n      img.classList.remove('hidden'); // Показуємо зображення\n    };\n  });\n}\n\nexport function clearGallery() {\n  document.querySelector('.gallery').innerHTML = '';\n}\n\nexport function showLoader() {\n  const loader = document.querySelector('.loader');\n  loader.classList.remove('hidden');\n  loader.classList.add('visible');\n}\n\nexport function hideLoader() {\n  const loader = document.querySelector('.loader');\n  loader.classList.remove('visible');\n  loader.classList.add('hidden');\n}\n","import { fetchImages } from './js/pixabay-api';\nimport {\n  renderGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// let lightbox = new SimpleLightbox('.gallery a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// const form = document.querySelector('#search-form');\n// const input = document.querySelector('input[name=\"searchQuery\"]');\n// let currentPage = 1;\n\n// form.addEventListener('submit', onSearch);\n\n// function onSearch(event) {\n//   event.preventDefault();\n\n//   const query = input.value.trim();\n\n//   if (!query) {\n//     showNotification('Please enter a search query.');\n//     return;\n//   }\n\n//   clearGallery();\n//   showLoader(); // Показуємо лоадер перед завантаженням даних\n//   fetchAndRenderImages(query);\n// }\n\n// async function fetchAndRenderImages(query) {\n//   try {\n//     const data = await fetchImages(query, currentPage);\n\n//     if (data.hits.length === 0) {\n//       showNotification(\n//         'Sorry, there are no images matching your search query. Please try again!'\n//       );\n//       return;\n//     }\n\n//     renderGallery(data.hits);\n//     lightbox.refresh(); // Оновлюємо SimpleLightbox після рендерингу нових зображень\n//   } catch (error) {\n//     showNotification('Something went wrong. Please try again later.');\n//   } finally {\n//     hideLoader(); // Ховаємо лоадер після завантаження\n//   }\n// }\n\n// function showNotification(message) {\n//   iziToast.error({\n//     title: 'Error',\n//     message: message,\n//     position: 'topRight',\n//   });\n// }\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nconst form = document.querySelector('#search-form');\nconst input = document.querySelector('input[name=\"searchQuery\"]');\nlet currentPage = 1;\n\nform.addEventListener('submit', onSearch);\n\nfunction onSearch(event) {\n  event.preventDefault();\n\n  const query = input.value.trim();\n\n  if (!query) {\n    showNotification('Please enter a search query.');\n    return;\n  }\n\n  clearGallery();\n  fetchAndRenderImages(query);\n}\n\nasync function fetchAndRenderImages(query) {\n  // Показати індикатор завантаження\n  document.getElementById('loading-indicator').classList.remove('hidden');\n\n  try {\n    const data = await fetchImages(query, currentPage);\n\n    if (data.hits.length === 0) {\n      showNotification(\n        'Sorry, there are no images matching your search query. Please try again!'\n      );\n      return;\n    }\n\n    renderGallery(data.hits);\n    lightbox.refresh();\n  } catch (error) {\n    showNotification('Something went wrong. Please try again later.');\n  } finally {\n    // Приховати індикатор завантаження після завершення запиту\n    document.getElementById('loading-indicator').classList.add('hidden');\n  }\n}\n\nfunction showNotification(message) {\n  iziToast.error({\n    title: 'Error',\n    message: message,\n    position: 'topRight',\n  });\n}\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","params","axios","error","renderGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","img","clearGallery","lightbox","SimpleLightbox","form","input","currentPage","onSearch","event","showNotification","fetchAndRenderImages","data","message","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC/D,MAAMC,EAAS,CACb,IAAKN,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMC,EACN,SAAUC,CACd,EAEE,GAAI,CAEF,OADiB,MAAME,EAAM,IAAIN,EAAU,CAAE,OAAAK,CAAM,CAAE,GACrC,IACjB,OAAQE,EAAO,CACd,cAAQ,MAAM,oCAAqCA,CAAK,EAClDA,CACP,CACH,CCvBO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,mBAEIL,CAAa;AAAA;AAAA,sBAEVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,oBAK5BC,CAAK;AAAA;AAAA;AAAA;AAAA,oBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,oBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,oBAIRC,CAAS;AAAA;AAAA;AAAA,aAKxB,EACA,KAAK,EAAE,EAEa,SAAS,cAAc,UAAU,EACzC,mBAAmB,YAAaP,CAAM,EAGnC,SAAS,iBAAiB,mBAAmB,EAC/DD,EAAO,QAAQS,GAAO,CACpBA,EAAI,OAAS,IAAM,CACFA,EAAI,uBACZ,UAAU,IAAI,QAAQ,EAC7BA,EAAI,UAAU,OAAO,QAAQ,CACnC,CACA,CAAG,CACH,CAEO,SAASC,GAAe,CAC7B,SAAS,cAAc,UAAU,EAAE,UAAY,EACjD,CCSA,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAChB,CAAC,EAED,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQ,SAAS,cAAc,2BAA2B,EAChE,IAAIC,EAAc,EAElBF,EAAK,iBAAiB,SAAUG,CAAQ,EAExC,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EAEpB,MAAMxB,EAAQqB,EAAM,MAAM,KAAI,EAE9B,GAAI,CAACrB,EAAO,CACVyB,EAAiB,8BAA8B,EAC/C,MACD,CAEDR,IACAS,EAAqB1B,CAAK,CAC5B,CAEA,eAAe0B,EAAqB1B,EAAO,CAEzC,SAAS,eAAe,mBAAmB,EAAE,UAAU,OAAO,QAAQ,EAEtE,GAAI,CACF,MAAM2B,EAAO,MAAM5B,EAAYC,EAAOsB,CAAW,EAEjD,GAAIK,EAAK,KAAK,SAAW,EAAG,CAC1BF,EACE,0EACR,EACM,MACD,CAEDnB,EAAcqB,EAAK,IAAI,EACvBT,EAAS,QAAO,CACjB,MAAe,CACdO,EAAiB,+CAA+C,CACpE,QAAY,CAER,SAAS,eAAe,mBAAmB,EAAE,UAAU,IAAI,QAAQ,CACpE,CACH,CAEA,SAASA,EAAiBG,EAAS,CACjCC,EAAS,MAAM,CACb,MAAO,QACP,QAASD,EACT,SAAU,UACd,CAAG,CACH"}